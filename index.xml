<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Austin Gebauer</title><link>http://austingebauer.com/</link><description>Recent content on Austin Gebauer</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; Copyright 2020, Austin Gebauer</copyright><lastBuildDate>Sun, 21 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://austingebauer.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Opening files with Vim from the Finder on macOS</title><link>http://austingebauer.com/post/2020/finder-vim/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2020/finder-vim/</guid><description>I use Vim for most all the file editing I do on my Mac. I thought it&amp;rsquo;d be nice to be able to click on files in the Finder window and have them open up in my terminal for editing with Vim, so I wrote a bit of AppleScript to make it happen. This post shares how I set this up on my Mac so that you can do the same.</description></item><item><title>Bitwise Tricks in Go</title><link>http://austingebauer.com/post/2020/bitwise-and-bit-shift-operators-in-go/</link><pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2020/bitwise-and-bit-shift-operators-in-go/</guid><description>This post contains a collection of problems that I&amp;rsquo;ve solved using bitwise operators in Go . I&amp;rsquo;ll be trying to keep the examples as practical as possible. I plan to continue updating this post as I find more examples to share with you-all.
Bitwise Operators Go provides operators that perform bitwise logical and bit shift operations on integer types.
The bitwise logical operators are: &amp;amp; bitwise AND | bitwise OR ^ bitwise XOR &amp;amp;^ bit clear (AND NOT)</description></item><item><title>How to use the theme on this website</title><link>http://austingebauer.com/post/2020/devise-hugo-theme/</link><pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2020/devise-hugo-theme/</guid><description>My first Hugo website theme, Devise , was recently accepted into the Hugo themes gallery . I&amp;rsquo;m excited to share that you can now use it for your own website.
You can find instructions for installing, configuring, and updating the theme here .
I&amp;rsquo;d greatly appreciate a Github project star ‚≠ê if you like the theme. If you have an idea for a new feature or found a bug, please feel free to use Github issues to let me know.</description></item><item><title>Sorting maps in Go</title><link>http://austingebauer.com/post/2020/sorting-maps-in-go/</link><pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2020/sorting-maps-in-go/</guid><description>Go provides a built-in map type that implements a hash table (i.e., associative array that can map keys to values).
When iterating over a map, the iteration order isn&amp;rsquo;t specified and has no guarantee to be the same from one iteration to the next. So, if you require a certain iteration order, you&amp;rsquo;ll need to create a separate data structure that specifies that order.
In this post, I&amp;rsquo;ll show examples of how to specify that iteration order.</description></item><item><title>The books I read in 2020</title><link>http://austingebauer.com/post/2020/books/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2020/books/</guid><description>Continuing the tradition that I started in 2019, here are all the books that I&amp;rsquo;m reading in each month of 2020.
Why We Sleep - January Why we sleep is an exploration of all things related to, you guessed it, sleep.
The book covered the topics that I was expecting to learn about, for example, dreams and circadian rhythms. It also covered some topics that I was not expecting to learn about, for example, evolutionary pressures motivating sleep, and sleep in animals.</description></item><item><title>The books I read in 2019</title><link>http://austingebauer.com/post/2019/books/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2019/books/</guid><description>In the last quarter of 2019, I decided to read a new book every month. As a tradition, I&amp;rsquo;ll be posting short reviews for each book that I read over each year.
So here are all of the books that I read in 2019, starting with what I read in September and ending with December.
Rework - September Rework is an incredibly insightful business book that questions the status quo and current state of affairs for how things get done in the workplace.</description></item><item><title>Writing a Ray Tracer in Go</title><link>http://austingebauer.com/post/2019/ray-tracing/</link><pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate><guid>http://austingebauer.com/post/2019/ray-tracing/</guid><description>Table of Contents Motivation Tools for the Job Rendering 1 - Projectile Rendering 2 - Clock Rendering 3 - 2D Spheres Rendering 4 - 3D Spheres Rendering 5 - World Rendering 6 - World with Shadows Motivation I&amp;rsquo;d been curious about how graphics worked since playing video games as a child.
I decided to take the time to learn about graphics programming this year.</description></item><item><title>About</title><link>http://austingebauer.com/about/</link><pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate><guid>http://austingebauer.com/about/</guid><description>About Me Hello üëã I&amp;rsquo;m Austin Gebauer. I live in Seattle, WA. I&amp;rsquo;m a software engineer.
I studied computer science at the University of Washington.
I currently work for Hashicorp on their Vault product.
Previously, I worked for NGINX and F5 Networks.
This Blog This blog is an outlet for me to share things that I&amp;rsquo;ve learned with others.
Most of my posts will be related to writing software.
Reaching Me You can reach me by email at gebauer.</description></item></channel></rss>